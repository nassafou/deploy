global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
        description Bonjour Yoz

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


#frontend myapp_front
#        bind *:80
#        mode http
#        #bloc lb1
#        acl myapp_front1 hdr_dom(host) -i loadbalancer1.fr
#        use_backend load1 if myapp_front1
#        #bloc lb2
#        acl myapp_front2 hdr_dom(host) -i loadbalancer2.fr
#        use_backend load2 if myapp_front2
#    Acl pour sp√©cifier les acces
##backend myapp_back
##        balance roundrobin
##        server k8s-worker1 192.168.205.11:80
##        server srv_python 192.168.205.12:5000
#
#backend load1
#        server serv_load1 192.168.205.11:5000
#
#backend load2
#        server serv_load2 192.168.205.12:5000
#

#frontend myapp_front
#         bind *:80
#         mode http
#         option forwardfor
#         default_backend load
#
#backend load
#         server load1 192.168.205.11:5000
#

#listen stats
#          bind *:9000
#          stats enable
#          stats uri /stats
#          stats refresh 120s
#          stats auth vagrant:vagrant
#          stats show-desc
#          stats show-legends
#          stats admin if TRUE
#
#
#
#
#frontend myapp_front
#         description Front de loadbalancer1.fr et loadbalancer2.fr
#         bind *:80
#         mode http
#
#         acl myapp_front1 hdr_dom(host) -i loadbalancer1.fr
#         use_backend load1 if myapp_front1
#
#         acl myapp_front2 hdr_dom(host) -i loadbalancer2.fr
#         use_backend load2 if myapp_front2
#
#backend load1
#         description du load1
#         server serv_python1 192.168.205.11:5000
#
#backend load2
#        
#         server serv_python2 192.168.205.12:5000
##         server serv_python3 172.17.0.4:5000
##         server serv_python4 172.17.0.5:5000

frontend myapp_front
         bind *:80
         mode http

         acl is_static_file url_reg .*\.(css|js)
         acl mobile_iphone hdr_sub(User-Agent) -i iphone
         use_backend load1 if is_static_file
         use_backend load1 if mobile_iphone

         default_backend load2 

         backend load1
         server serv_mobile 192.168.205.11:5000

         backend load2
         server serv_other 192.168.205.12:5000









